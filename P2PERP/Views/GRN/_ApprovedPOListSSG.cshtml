@{
    Layout = "";
}


<!-- ✅ Approved PO List Card -->
<div class="table-responsive card shadow p-3 bg-white rounded">
    <h4 class="text-primary text-center fw-bolder">Approved PO List</h4>

    <div class="d-flex justify-content-between align-items-center mb-5 flex-wrap pe-3">
        <!-- Date Range Picker -->
        <div class="d-flex align-items-center gap-3">
            <div class="input-group" style="height: 40px; max-width: 280px;">
                <span class="input-group-text bg-primary text-white">
                    <i class="bi bi-calendar-date"></i>
                </span>
                <input type="text" id="Purchasedatepicker" class="form-control" placeholder="Select date range" readonly />
            </div>
        </div>

        <!-- Export buttons -->
        <div id="exportContainer" class="d-flex" style="height: 40px; align-items: center;"></div>
    </div>

    <table id="approvedPoTable" class="table table-bordered table-striped text-center align-middle">
        <thead class="table-dark">
            <tr>
                <th><input type="checkbox" id="selectAllApprovedPO" /></th>
                <th>Sr. No.</th>
                <th>PO Code</th>
                <th>PO Date</th>
                <th>Total Amount</th>
                <th>Vendor</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<!-- ✅ Create GRN Modal -->
<div class="modal fade" id="createGrnModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header bg-primary py-2 px-3" style="min-height:50px;">
                <h5 class="modal-title m-0 flex-grow-1 text-center fs-5 text-white">Create GRN</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>

            <div class="modal-body" id="grnModalBody"></div>
        </div>
    </div>
</div>

<script>
toastr.options = {
    closeButton: true,
    progressBar: true,
    preventDuplicates: true,
    newestOnTop: true,
    positionClass: "toast-top-right",
    timeOut: "3000"
};

function showExportWarning(msg="Please select at least one row before exporting.") { toastr.warning(msg,"Warning"); }
function showExportSuccess(msg="Export completed.") { toastr.success(msg,"Success"); }

$(document).ready(function () {

    let selectedPOs = new Set();
    let exportSerialCounter = 0;
    let fromDatePO = null;
    let toDatePO = null;

    // ✅ Initialize DataTable
    let table = $('#approvedPoTable').DataTable({
        ajax: {
            url: '@Url.Action("ApprovedpoListSSG","GRN")',
            type: 'GET',
            data: function(d) {
                d.fromDate = fromDatePO ? fromDatePO.format("YYYY-MM-DD") : '';
                d.toDate = toDatePO ? toDatePO.format("YYYY-MM-DD") : '';
            },
            dataSrc: function(json){
                if (!json || !json.data) return [];
                if (json.data.length === 0) toastr.info("No records found for selected date range.");
                return json.data;
            },
            error: function(){ toastr.error("Failed to load Approved PO list. Please try again.","Error"); }
        },
        columns: [
            {
                data:'POCode', orderable:false, className:'text-center',
                render: data=>`<input type="checkbox" class="rowCheckboxApprovedPO" value="${data}"/>`
            },
            { data:null, className:'text-center', render:(data,type,row,meta)=>meta.row+1 },
            { data:'POCode', className:'text-center', render: (data,type,row)=>`<span data-bs-toggle="tooltip" title="PO Code: ${data}">${data}</span>` },
            { data:'PODate', className:'text-center' },
            { data:'TotalAmount', className:'text-center' },
            { data:'VendorName', className:'text-center' },
            {
                data: 'POStatus',
                className: 'text-center',
                render: data => data?.toLowerCase() === 'approved'
                    ? `<span class="fw-bold text-white bg-success px-2 py-1 rounded" data-bs-toggle="tooltip" title="This PO is approved">${data}</span>`
                    : data
            },

            {
                data:'POCode', className:'text-center',
                render:data=>`<button class="btn btn-success btn-sm createGRNBtn" data-bs-toggle="tooltip" title="Create GRN for ${data}"><i class="bi bi-file-earmark-plus-fill fs-5"></i></button>`
            }
        ],
        dom:'<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex justify-content-end"f>>t<"row mt-3"<"col-md-6"i><"col-md-6 d-flex justify-content-end"p>>',
        buttons: [
            // --- PRINT ---
            {
                extend: 'print',
                text: '<i class="bi bi-printer-fill fs-5"></i>',
                title: 'Approved PO List',
                exportOptions: {
                    columns: [2,3,4,5,6],
                    rows: (idx,data,node)=>selectedPOs.has(data.POCode)
                },
                customize: function(win){
                    exportSerialCounter=0;
                    $(win.document.body).find('table thead tr').prepend('<th>S.No.</th>');
                    $(win.document.body).find('table tbody tr').each(function(){
                        $(this).prepend('<td>'+(++exportSerialCounter)+'</td>');
                    });
                    $(win.document.body).find('table thead th').css({'background-color':'#000','color':'#fff'});
                },
                action:function(e,dt,btn,config){
                    if(selectedPOs.size===0){ showExportWarning(); return; }
                    $.fn.dataTable.ext.buttons.print.action.call(this,e,dt,btn,config);
                    showExportSuccess("Print started.");
                }
            },
            // --- PDF ---
            {
                extend: 'pdfHtml5',
                text: '<i class="bi bi-file-earmark-pdf fs-5 text-danger"></i>',
                title: `Approved PO List - ${moment().format("YYYY-MM-DD")}`,
                exportOptions:{
                    columns:[2,3,4,5,6],
                    rows:(idx,data,node)=>selectedPOs.has(data.POCode)
                },
                customize: function(doc){
                    exportSerialCounter=0;
                    doc.content[1].table.body[0].unshift({text:'S.No.',bold:true,fillColor:'#000',color:'#fff',alignment:'center'});
                    doc.content[1].table.body.forEach(function(row,idx){
                        if(idx===0) return;
                        row.unshift({text:(++exportSerialCounter).toString(),alignment:'center'});
                    });
                    doc.content[1].table.body[0].forEach(function(headerCell){
                        headerCell.fillColor='#000';
                        headerCell.color='#fff';
                        headerCell.alignment='center';
                        headerCell.bold=true;
                    });
                    doc.content[1].layout={
                        hLineWidth:function(i,node){return 1;},
                        vLineWidth:function(i,node){return 1;},
                        hLineColor:function(i,node){return '#000';},
                        vLineColor:function(i,node){return '#000';},
                        paddingLeft:function(i,node){return 5;},
                        paddingRight:function(i,node){return 5;},
                        paddingTop:function(i,node){return 4;},
                        paddingBottom:function(i,node){return 4;}
                    };
                },
                action:function(e,dt,btn,config){
                    if(selectedPOs.size===0){ showExportWarning(); return; }
                    $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this,e,dt,btn,config);
                    showExportSuccess("PDF export completed.");
                }
            },
            // --- EXCEL ---
            {
                extend: 'excelHtml5',
                text: '<i class="bi bi-file-earmark-excel fs-5 text-success"></i>',
                title: `Approved PO List - ${moment().format("YYYY-MM-DD")}`,
                exportOptions:{
                    columns:[2,3,4,5,6],
                    rows:(idx,data,node)=>selectedPOs.has(data.POCode)
                },
                customize: function(xlsx){
                    var sheet=xlsx.xl.worksheets['sheet1.xml'];
                    exportSerialCounter=0;
                    $('row:first c',sheet).first().before('<c t="inlineStr" r="A1"><is><t>S.No.</t></is></c>');
                    $('row:gt(0)',sheet).each(function(){ $(this).prepend('<c t="inlineStr"><is><t>'+(++exportSerialCounter)+'</t></is></c>'); });
                    $('row:first c',sheet).attr('s','2');
                },
                action:function(e,dt,btn,config){
                    if(selectedPOs.size===0){ showExportWarning(); return; }
                    $.fn.dataTable.ext.buttons.excelHtml5.action.call(this,e,dt,btn,config);
                    showExportSuccess("Excel export completed.");
                }
            },
            // --- CSV ---
            {
                extend: 'csvHtml5',
                text: '<i class="bi bi-filetype-csv fs-5 text-success"></i>',
                title: `Approved_PO_List_${moment().format("YYYY-MM-DD")}`,
                exportOptions:{
                    columns:[2,3,4,5,6],
                    rows:(idx,data,node)=>selectedPOs.has(data.POCode),
                    format:{
                        header:function(data,columnIdx){ if(columnIdx===0) return 'S.No.'; return data; },
                        body:function(data,row,column,node){ if(column===0) return ++exportSerialCounter; return data; }
                    }
                },
                action:function(e,dt,btn,config){
                    if(selectedPOs.size===0){ showExportWarning(); return; }
                    exportSerialCounter=0;
                    $.fn.dataTable.ext.buttons.csvHtml5.action.call(this,e,dt,btn,config);
                    showExportSuccess("CSV export completed.");
                }
            }
        ],
        rowCallback:function(row,data){
            $(row).find('.rowCheckboxApprovedPO').prop('checked', selectedPOs.has(data.POCode));
        },
        drawCallback: function(){
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) { return new bootstrap.Tooltip(tooltipTriggerEl); });
        }
    });

    // ✅ Custom date range filter
    $.fn.dataTable.ext.search.push(function(settings,data,dataIndex){
        if(!fromDatePO || !toDatePO) return true;
        let poDateStr=data[3]; // PODate column
        if(!poDateStr) return false;
        let poDate=moment(poDateStr,"DD-MM-YYYY");
        return poDate.isSameOrAfter(fromDatePO) && poDate.isSameOrBefore(toDatePO);
    });

    // ✅ Initialize Date Range Picker
    $('#Purchasedatepicker').daterangepicker({
        autoUpdateInput: false,
        opens: "center",
        drops: "down",
        locale: { format: "DD-MM-YYYY", cancelLabel: "Clear" },
        ranges: {
            "Today":[moment(),moment()],
            "Yesterday":[moment().subtract(1,"days"),moment().subtract(1,"days")],
            "Last 7 Days":[moment().subtract(6,"days"),moment()],
            "Last 30 Days":[moment().subtract(29,"days"),moment()],
            "This Month":[moment().startOf("month"),moment().endOf("month")],
            "Last Month":[moment().subtract(1,"month").startOf("month"),moment().subtract(1,"month").endOf("month")]
        }
    },function(start,end){
        fromDatePO=start.startOf('day');
        toDatePO=end.endOf('day');
        $('#Purchasedatepicker').val(start.format("DD-MM-YYYY")+" - "+end.format("DD-MM-YYYY"));
        table.draw();
    });

    $('#Purchasedatepicker').on('cancel.daterangepicker', function(){
        $(this).val('');
        fromDatePO=null;
        toDatePO=null;
        table.draw();
    });

    // ✅ Row checkbox, select all
    $(document).on('change','.rowCheckboxApprovedPO', function(){
        const poCode=$(this).val();
        $(this).is(':checked')?selectedPOs.add(poCode):selectedPOs.delete(poCode);
        $('#selectAllApprovedPO').prop('checked',
            table.rows({page:'current'}).nodes().to$().find('.rowCheckboxApprovedPO').length ===
            table.rows({page:'current'}).nodes().to$().find('.rowCheckboxApprovedPO:checked').length
        );
    });

    $(document).on('change','#selectAllApprovedPO', function(){
        const checked=$(this).is(':checked');
        table.rows().every(function(){ checked?selectedPOs.add(this.data().POCode):selectedPOs.delete(this.data().POCode); });
        $('#approvedPoTable').find('.rowCheckboxApprovedPO').prop('checked', checked);
    });

    // ✅ Create GRN modal
    $(document).on("click",".createGRNBtn", function(){
        const poCode=$(this).closest('tr').find('td:eq(2)').text().trim();
        $('#createGrnModal').modal('show');
        $('#grnModalBody').html('<p class="text-center py-3">Loading...</p>');
        $.get('@Url.Action("CreateGRNSSG","GRN")',{POCode:poCode})
        .done(data=>$('#grnModalBody').html(data))
        .fail(()=>$('#grnModalBody').html('<p class="text-danger text-center">Failed to load GRN form. Check your network.</p>'));
    });

});
</script>

