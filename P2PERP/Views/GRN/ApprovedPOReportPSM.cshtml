@{
    ViewBag.Title = "Approved PO Count by Vendor";
}

<div class="container">
    <div class="card shadow-lg border-0 rounded-4 p-4">
        <!-- Header with Datepicker -->
        <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap">
            <!-- Datepicker on Left -->
            <div class="mb-2">
                <div class="input-group" style="max-width: 340px;">
                    <span class="input-group-text bg-primary text-white">
                        <i class="bi bi-calendar-date"></i>
                    </span>
                    <input type="text" id="FirstreportrangePSM" class="form-control" readonly placeholder="Select Date" />
                </div>
            </div>

            <!-- Title in Center -->
            <div class="flex-grow-1 text-center">
                <h4 class="text-primary fw-bold mb-0">
                    <i class="bi bi-pie-chart-fill me-2"></i> Approved PO Count by Vendor
                </h4>
            </div>

            <!-- Spacer Right -->
            <div class="mb-2" style="width:280px;"></div>
        </div>

        <!-- Donut Chart -->
        <div class="position-relative border rounded-3 p-3 shadow-sm mb-4">
            <div class="position-absolute top-0 end-0 p-3 text-end">
                <h6 class="text-muted mb-1">Total Approved POs</h6>
                <h2 id="poTotalCountPSM" class="text-success fw-bold mb-0">0</h2>
            </div>
            <div id="poDonutChartPSM" style="height:400px;"></div>
        </div>
        <!-- Approved PO List -->
        <h5 class="text-primary fw-bold text-center mb-3">Approved Purchase Orders</h5>
        <div class="table-responsive">
            <table id="approvedPOListTablePSM" class="table table-striped table-bordered w-100">
                <thead class="table-dark">
                    <tr>
                        <th><input type="checkbox" id="selectAll" /></th>
                        <th>S.No</th>
                        <th>PO Code</th>
                        <th>RQ Code</th>
                        <th>Vendor Name</th>
                        <th>Company Name</th>
                        <th>Approved Date</th>
                        <th>Total Amount</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<!-- PO Items Modal -->
<div class="modal fade" id="poItemsModal" tabindex="-1" aria-labelledby="poItemsModalLabel" data-bs-backdrop="true" data-bs-keyboard="false" aria-hidden="false">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title text-white fw-bold text-center w-100 pb-4" id="poItemsModalLabel">Approved PO Items</h5>
                <button type="button"
                        class="btn-close btn-close-white position-absolute top-0 end-0 m-3 fs-4"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table id="poItemsTablePSM" class="table table-striped table-bordered w-100">
                    <thead class="table-dark">
                        <tr>
                            <th><input type="checkbox" id="selectAllChild" /></th>
                            <th>S.No</th>
                            <th>Item Name</th>
                            <th>Cost Per Unit</th>
                            <th>Unit Quantity</th>
                            <th>Discount</th>
                            <th>Tax Rate</th>
                            <th>Final Amount</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot class="table-active">
                        <tr>
                            <th colspan="7" class="text-end text-info-emphasis">Total:</th>
                            <th></th>
                        </tr>
                    </tfoot>
                </table>
            </div>
            <div class="modal-footer d-flex flex-column gap-4 justify-content-end align-items-end">
                <button class="btn btn-secondary rounded-2 me-2 mb-4" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
var poTablePSM = null;
var poItemsTablePSM = null;
let selectedName = null;

// Toastr config
toastr.options = { closeButton:true, progressBar:true, newestOnTop:true, positionClass:"toast-top-right", preventDuplicates:true, timeOut:3000 };

//Datetime string for PDF export
function buildDatetimeString(){
    var now = new Date();
    return now.getFullYear() + '-' +
        ('0' + (now.getMonth() + 1)).slice(-2) + '-' +
        ('0' + now.getDate()).slice(-2) + ' ' +
        ('0' + now.getHours()).slice(-2) + ':' +
        ('0' + now.getMinutes()).slice(-2) + ':' +
        ('0' + now.getSeconds()).slice(-2);
}
   function findTableNodeIndex(doc){
    for(var i=0;i<doc.content.length;i++){
        if(doc.content[i] && doc.content[i].table){
            return i;
        }
    }
    return -1;
    }
    // Generic PDF customization
    function pdfCustomizeGeneric(doc, title, orientation) {
        orientation = orientation || 'portrait';
        try {
            // set orientation correctly
            doc.pageOrientation = (orientation === 'portrait') ? 'portrait' : 'portrait';
            doc.pageSize = 'A4';
            doc.pageMargins = [30, 60, 30, 40];

            if (!doc.styles) doc.styles = {};
            doc.styles.tableHeader = doc.styles.tableHeader || {};
            doc.styles.tableHeader.fillColor = doc.styles.tableHeader.fillColor || '#2c3e50';
            doc.styles.tableHeader.color = doc.styles.tableHeader.color || 'white';
            doc.styles.tableHeader.bold = true;

            doc.defaultStyle = doc.defaultStyle || {};
            doc.defaultStyle.fontSize = doc.defaultStyle.fontSize || 10;

            var tableIndex = findTableNodeIndex(doc);
            var datetime = buildDatetimeString();

            var headerBlock = [
                { text: title || '', alignment: 'center', fontSize: 14, bold: true, margin: [0, 0, 0, 6] },
                { text: 'Generated on: ' + datetime, alignment: 'center', bold: false, fontSize: 9, margin: [0, 0, 0, 8] },
                { text: '\n' }
            ];

            if (tableIndex >= 0) {
                // insert header right before the table node
                doc.content.splice(tableIndex, 0, ...headerBlock);
                tableIndex += headerBlock.length;
                var tableObj = doc.content[tableIndex];
                if (tableObj && tableObj.table && tableObj.table.body) {
                    var body = tableObj.table.body;

                    // correct first column to be serial numbers
                    for (var r = 1; r < body.length; r++) {
                        body[r][0] = { text: (r).toString(), alignment: 'center' };
                    }

                    // style header row
                    if (body[0]) {
                        for (var c = 0; c < body[0].length; c++) {
                            if (typeof body[0][c] === 'string') {
                                body[0][c] = { text: body[0][c], style: 'tableHeader', bold: true, alignment: 'center' };
                            } else if (body[0][c] && body[0][c].text) {
                                body[0][c].style = body[0][c].style || 'tableHeader';
                                body[0][c].alignment = body[0][c].alignment || 'center';
                                body[0][c].bold = true;
                            }
                        }
                    }

                    var objLayout = {};
                    objLayout['hLineWidth'] = function (i) { return 0.5; };
                    objLayout['vLineWidth'] = function (i) { return 0.5; };
                    objLayout['hLineColor'] = function (i) { return '#aaa'; };
                    objLayout['vLineColor'] = function (i) { return '#aaa'; };
                    objLayout['paddingLeft'] = function (i) { return 6; };
                    objLayout['paddingRight'] = function (i) { return 6; };
                    tableObj.layout = objLayout;
                }
            } else {
                doc.content.splice(0, 0, ...headerBlock);
            }

            doc.footer = function (currentPage, pageCount) {
                return {
                    columns: [
                        { text: 'Generated on: ' + datetime, alignment: 'left', margin: [30, 0, 0, 0] },
                        { text: 'Page ' + currentPage.toString() + ' of ' + pageCount.toString(), alignment: 'right', margin: [0, 0, 30, 0] }
                    ],
                    fontSize: 9
                };
            };
        } catch (e) {
            console.error('pdfCustomizeGeneric error', e);
        }
    }
    // Excel customization
    function excelCustomize(xlsx, title) {
        try {
            var sheet = xlsx.xl.worksheets['sheet1.xml'];
            if (sheet) {
                $('sheetData row:first', sheet).before(`<row r="1"><c t="inlineStr" r="A1"><is><t>${title}</t></is></c></row>`);
                $('row:nth-child(2) c', sheet).attr('s', '2');
            }
        } catch (e) {
            console.error('excelCustomize error', e);
        }
    }
    // Print customization
    function printCustomize(win, title) {
        try {
            $(win.document.body).css('font-size', '12pt').prepend(`<h3 class="text-center mb-3">${title}</h3>`);
            $(win.document.body).find('table').addClass('compact table-bordered').css('font-size', 'inherit');
        } catch (e) {
            console.error('printCustomize error', e);
        }
    }

// ------------------- EXPORT BUTTON FACTORIES -------------------
    function makeExportButton(type, text, selector, title, orientation) {
        title = title || "Report";
        orientation = orientation || "portrait";

        var btn = {
            extend: type,
            text: text,
            action: function (e, dt, button, config) {
                if (selector) {
                    const selected = $(selector + ":checked");
                    if (selected.length === 0) {
                        toastr.warning("Please select at least one row!", "Warning");
                        return;
                    }
                }
                $.fn.dataTable.ext.buttons[type].action.call(this, e, dt, button, config);
            },
            exportOptions: {
                columns: ':visible:not(:first-child):not(:last-child)',
                rows: function (idx, data, node) {
                    if (!selector) return true;
                    return $(node).find(selector).is(':checked');
                },
                format: {
                    body: function (data, row, column, node) {
                        var div = document.createElement("div");
                        div.innerHTML = data;
                        if (div.querySelector("i.bi-currency-rupee")) {
                            return "₹ " + div.textContent.trim();
                        }
                        if (div.querySelector("span.badge")) {
                            return div.textContent.trim();
                        }
                        return div.textContent.trim() || data;
                    }
                }
            },
            customize: function (doc) {
                if (type === 'pdfHtml5') {
                    pdfCustomizeGeneric(doc, title, orientation);
                }
            },
            customizeData: function (data) {
                if (type === 'excelHtml5') {
                    excelCustomize(data, title);
                }
            },
            customizePrint: function (win) {
                if (type === 'print') {
                    printCustomize(win, title);
                }
            }
        };

        return btn;
    }

    // Child table export button factory with footer total support
    function makeChildExportButton(type, text, selector, title, orientation) {
        var btn = makeExportButton(type, text, selector, title, orientation);
        btn.exportOptions = {
            columns: ':visible:not(:first-child)',
            rows: function (idx,data, node) {
                if (!selector) return true;
                return $(node).find(selector).is(':checked');
            },
            modifier: { selected: null },
            footer: true,
            format: {
                body: function (data, row, column, node) {
                    var div = document.createElement("div");
                    div.innerHTML = data;
                    return div.textContent.trim();
                }
            }
        };

        if (type === 'print' || type === 'pdfHtml5') {
            btn.footer = true;
        }

        return btn;
    }
// ------------------- DATE PICKER -------------------
$(document).ready(function(){
    $('#FirstreportrangePSM').daterangepicker({
        autoUpdateInput:false,
        opens:"right",
        drops:"down",
        locale:{cancelLabel:'Clear'},
        ranges:{
            'Today':[moment(),moment()],
            'Yesterday':[moment().subtract(1,'days'),moment().subtract(1,'days')],
            'Last 7 Days':[moment().subtract(6,'days'),moment()],
            'Last 30 Days':[moment().subtract(29,'days'),moment()],
            'This Month':[moment().startOf('month'),moment().endOf('month')],
            'Last Month':[moment().subtract(1,'month').startOf('month'),moment().subtract(1,'month').endOf('month')]
        }
    },
    // On apply
        function (start, end) {
        $('#FirstreportrangePSM').val(start.format('YYYY-MM-DD')+' - '+end.format('YYYY-MM-DD'));
        initPOTablePSM(start.format('YYYY-MM-DD'),end.format('YYYY-MM-DD'));
        loadPOChartPSM(start.format('YYYY-MM-DD'),end.format('YYYY-MM-DD'));
    });

    $('#FirstreportrangePSM').on('cancel.daterangepicker', function(){ $(this).val(''); initPOTablePSM(); loadPOChartPSM(); });
    initPOTablePSM();
    loadPOChartPSM();
});

// ------------------- PARENT DATATABLE -------------------
function initPOTablePSM(fromDate, toDate){
    if(poTablePSM){ poTablePSM.destroy(); $("#approvedPOListTablePSM tbody").empty(); }

    poTablePSM = $("#approvedPOListTablePSM").DataTable({
        dom:'<"d-flex justify-content-between align-items-center mb-2"Bf>rt<"d-flex justify-content-between align-items-center"i p>',
        responsive:true, processing:true,
        ajax:{
            url:'@Url.Action("ApprovedPOListsPSM","GRN")',
            type:"GET",
            data:{ startDate: fromDate || "", endDate: toDate || "" },
            dataSrc:"data"
        },
        columns:[
            { data:null, orderable:false, render:()=>'<input type="checkbox" class="rowCheckbox"/>' },
            { data:null, render:(d,t,r,meta)=>meta.row+1 },
            { data:'POCode' }, { data:'RQNO' }, { data:'VendorName' }, { data:'VendorCompanyName' },
            { data:'ApprovedRejectedDate', render: d => d ? new Date(d).toLocaleDateString("en-GB") : "" },
            { data:'TotalAmount', render: d => d ? `<i class="bi bi-currency-rupee text-secondary"></i> ${d}` : "-" },
            { data:'StatusName', render: d => d ? `<span class="badge bg-success fw-semibold">${d}</span>` : "" },
            { data:null, orderable:false, render: d => `<button class="btn btn-sm btn-primary btnViewPO" data-pocode="${d.POCode}"><i class="bi bi-eye me-1"></i></button>` }
        ],
        order:[[1,"asc"]],
        buttons:[
            makeExportButton('print','<i class="bi bi-printer-fill text-dark fs-5"></i>',".rowCheckbox","Approved PO List"),
            makeExportButton('pdfHtml5','<i class="bi bi-file-earmark-pdf-fill text-danger fs-5"></i>',".rowCheckbox","Approved PO List"),
            makeExportButton('excelHtml5','<i class="bi bi-file-earmark-excel text-success fs-5"></i>',".rowCheckbox","Approved PO List"),
            makeExportButton('csvHtml5','<i class="bi bi-filetype-csv text-success fs-5"></i>',".rowCheckbox","Approved PO List")
        ]
    });

    // select all handling
    $(document).off('change','#selectAll').on('change','#selectAll', function(){
        $('#approvedPOListTablePSM tbody input.rowCheckbox').prop('checked', $(this).is(':checked'));
    });
}

// ------------------- CHILD DATATABLE -------------------
function loadPOItems(poCode){
    if(poItemsTablePSM){ poItemsTablePSM.destroy(); $("#poItemsTablePSM tbody").empty(); }

    poItemsTablePSM = $("#poItemsTablePSM").DataTable({
        dom:'<"d-flex justify-content-between align-items-center mb-2"Bf>rt<"d-flex justify-content-between align-items-center"i p>',
        responsive:true, processing:true,
        ajax:{
            url:'@Url.Action("ApprovedPOItemsPSM","GRN")',
            type:'GET',
            data:{ poCode: poCode },
            dataSrc: function(json){ return json && json.data ? json.data : []; }
        },
        columns:[
            { data:null, orderable:false, render:()=>'<input type="checkbox" class="rowCheckboxChild"/>' },
            { data:null, render:(d,t,r,meta)=>meta.row+1 },
            { data:'ItemName' },
            { data:"CostPerUnit", render: d => d ? `<i class="bi bi-currency-rupee text-secondary"></i> ${parseFloat(d).toLocaleString("en-IN",{minimumFractionDigits:2})}` : "-" },
            { data:'UnitQuantity', render: $.fn.dataTable.render.number(',','.',2) },
            { data:'Discount' },
            { data:'TaxRate' },
            { data:"FinalAmount", render: d => d ? `<i class="bi bi-currency-rupee text-secondary"></i> ${parseFloat(d).toLocaleString("en-IN",{minimumFractionDigits:2})}` : "-" }
        ],
        footerCallback:function(row,data,start,end,display){
            var api = this.api();
            var total = 0;
            api.rows({ page: 'current' }).every(function(){
                var $row = $(this.node());
                if($row.find('input.rowCheckboxChild').is(':checked')){
                    total += parseFloat(this.data().FinalAmount) || 0;
                }
            });
            $(api.column(7).footer()).html(`<i class="bi bi-currency-rupee text-secondary"></i> ${total.toFixed(2)}`).css({'color':'Orange','font-weight':'bold'});
        },
        buttons:[
            makeChildExportButton('print','<i class="bi bi-printer-fill text-dark fs-5"></i>',".rowCheckboxChild","Approved PO Items"),
            makeChildExportButton('pdfHtml5','<i class="bi bi-file-earmark-pdf-fill text-danger fs-5"></i>',".rowCheckboxChild","Approved PO Items"),
            makeChildExportButton('excelHtml5','<i class="bi bi-file-earmark-excel text-success fs-5"></i>',".rowCheckboxChild","Approved PO Items"),
            makeChildExportButton('csvHtml5','<i class="bi bi-filetype-csv text-success fs-5"></i>',".rowCheckboxChild","Approved PO Items")
        ]
    });

    // select all child
    $(document).off('change','#selectAllChild').on('change','#selectAllChild', function(){
        $('#poItemsTablePSM tbody input.rowCheckboxChild').prop('checked', $(this).is(':checked')).trigger('change');
    });

    // redraw on individual child checkbox change to recalc footer
    $(document).off('change','.rowCheckboxChild').on('change','.rowCheckboxChild', function(){
        poItemsTablePSM.draw();
    });
}

// ------------------- VIEW MODAL -------------------
$(document).off('click','.btnViewPO').on('click','.btnViewPO', function(){
    var poCode = $(this).data('pocode');
    if(!poCode) return;
    $('#poItemsModal').modal('show');
    loadPOItems(poCode);
});

// ------------------- DONUT CHART -------------------
function loadPOChartPSM(fromDate, toDate){
    $.getJSON('@Url.Action("ApprovedPOChartPSM", "GRN")', { startDate: fromDate || "", endDate: toDate || "" }, function(res){
        if(!res || !res.data || !res.data.length){
            $("#poTotalCountPSM").text("0");
            Highcharts.chart('poDonutChartPSM', {
                chart: { type: 'pie', height: 400 },
                title: { text: 'No Data Available' },
                series: [{ name: 'Approved POs', data: [] }],
                credits: { enabled: false }
            });
            return;
        }

        var totalCount = res.data.reduce((sum, r) => sum + r.Count, 0);
        $("#poTotalCountPSM").text(totalCount);

        Highcharts.chart('poDonutChartPSM', {
            chart: { type: 'pie', height: 400 },
            title: { text: '' },
            subtitle: {
                text: 'Total POs: <b>' + totalCount + '</b>',
                align: 'left',
                verticalAlign: 'top',
                floating: true,
                style: { fontSize: '14px', fontWeight: 'bold', color: '#28a745' }
            },
            plotOptions: {
                pie: {
                    innerSize: '60%',
                    dataLabels: { enabled: true, format: '{point.name}: {point.y}' },
                    point: {
                        events: {
                            click: function() {
                                let vendorName = this.name;
                                poTablePSM.column(4).search(vendorName).draw();
                            }
                        }
                    }
                }
            },
            series: [{
                name: 'Approved POs',
                colorByPoint: true,
                data: res.data.map(r => ({ name: r.VendorName, y: r.Count }))
            }],
            credits: { enabled: false }
        });
    });
}
</script>

